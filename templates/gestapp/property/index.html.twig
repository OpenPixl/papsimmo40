{% extends 'admin.html.twig' %}

{% block title %}Property index{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script type="module" src="{{ asset('js/gestapp/property/index/onload.js') }}"></script>
    <script type="module" src="{{ asset('js/gestapp/property/index/endMandat.js') }}"></script>
    <script type="module" src="{{ asset('js/gestapp/property/index/closedProperty.js') }}"></script>
    <script>
        window.onload = function(){

            // ----------------------------------------------------------------
            // STEP 0 : Après l'initialisation de la page
            // ----------------------------------------------------------------

            // Ouverture de la modale d'ajout d'un bien / propriété avec intégration du Numéro de mandat modifiable par le créateur
            // ----------------------------------------------------------------
            // I. Ouverture de la modale
            const modalAddNewProperty = document.getElementById('modalAddNewProperty')
            const NewProperty = new bootstrap.Modal(modalAddNewProperty, { keyboard: true })
            const addNewProperty = document.getElementById('addNewProperty')
            const submitAddnewproperty = document.getElementById('submitAddnewproperty')
            const ArrayMandats = []

            axios
                .get('/gestapp/property/getlistmandats')
                .then(function(response){
                    // alimenter le tableau des ref existantes
                    let ListMandats = response.data.listmandats
                    ListMandats.forEach((element) => {
                        ArrayMandats.push(parseInt(element))
                    })
                })
            addNewProperty.addEventListener('click', function(event){
                event.preventDefault()
                NewProperty.show()
            })
            // condition si le bien doit etre créer sans numéro de mandat
            document.getElementById('nomandat').addEventListener('change', function(event){
                if(this.checked){
                    document.getElementById('tabMandat').setAttribute("class", "d-none")
                    document.getElementById("submitAddnewproperty").href = '/gestapp/property/add/0/0'
                }else {
                    document.getElementById('tabMandat').classList.remove("d-none");
                    document.getElementById('tabMandat').setAttribute("class", "table")
                }
            })
            // III. Modification de l'addresse de traitement sur l'input
            document.getElementById('refMandat').addEventListener('input', function(event){
                let newmandat = parseInt(document.getElementById('refMandat').value)
                let flag = 0
                for(let i=0; i<ArrayMandats.length; i++) {
                    if(newmandat === ArrayMandats[i]) {
                        flag = 1;
                    }
                }
                if(flag === 1){
                    document.getElementById("refMandat").classList.remove("is-valid")
                    document.getElementById("refMandat").classList.add("is-invalid")
                    document.getElementById('tdconsign').innerHTML = 'Veuillez corriger ce numéro de mandat, <br>il est présent dans la liste des biens <b>Paps immo</b>'

                }else{
                    document.getElementById("refMandat").classList.remove("is-invalid")
                    document.getElementById("refMandat").classList.add("is-valid")
                    document.getElementById('tdconsign').textContent = "Numéro de mandat valide."
                }
            })

            document.getElementById("submitAddnewproperty").addEventListener('click', function(event){
                const destination = document.getElementById('SelectDestination').value

                if(document.getElementById("refMandat").value === "" ){
                    if(document.getElementById("nomandat").checked !== true){
                        event.preventDefault()
                        alert("Attention, si vous souhaitez créer un bien sans numéro de mandat, veuillez cochez la case. Sinon entrez un numéro de mandat valid.")
                    }else{
                        event.preventDefault()
                        submitAddnewproperty.href = '/gestapp/property/add/1/0/' + destination
                        window.location.href = submitAddnewproperty.href
                    }
                }else{
                    if(document.getElementById("refMandat").classList.contains('is-valid')){
                        event.preventDefault()
                        let nummandat = document.getElementById("refMandat").value
                        submitAddnewproperty.href = '/gestapp/property/add/0/' + nummandat + '/' + destination
                        window.location.href = submitAddnewproperty.href
                    }else{
                        event.preventDefault()
                        alert("Attention, le numéro de mandat n'est pas valide. Veuillez entrez un numéro de mandat valid")
                    }
                }
            })

        // ----------------------------------------------------------------
        // STEP 1 : Fonctionnalités liées à l'archivage de bien.s
        // ----------------------------------------------------------------

            // Archivages d'un bien en création
            // ----------------------------------------------------------------
            // I. fonction d'archivage d'un bien
            function ArchivageProperty(event)
            {
                event.preventDefault();
                const url = this.href;
                axios
                    .post(url)
                    .then(function(response) {
                        // rafraichissement du tableau
                        document.getElementById('list').innerHTML = response.data.liste;
                        document.getElementById('listArchived').innerHTML = response.data.listeArchived
                        // Mise en place de l'évenement pour la suppression d'un bien en cours de création
                        document.querySelectorAll('a.jsModalDelPropertyIncreating').forEach(function(link){
                            link.addEventListener('click', DelPropertyIncreating)
                        })
                        // Mise en place de l'évenement pour l'archivage d'un bien
                        document.querySelectorAll('a.jsModalDelProperty').forEach(function(link){
                            link.addEventListener('click', ArchivageProperty)
                        })
                        document.querySelectorAll('a.Modaltransferate').forEach(function(link){
                            link.addEventListener('click', modalTransferate)
                        })
                        // initialisation du toaster
                        var toastHTMLElement = document.getElementById("toaster")
                        var message = response.data.message
                        var toastBody = toastHTMLElement.querySelector('.toast-body') // selection de l'élément possédant le message
                        toastBody.innerHTML = message
                        var toastElement = new bootstrap.Toast(toastHTMLElement, {animation: true, autohide: true, delay: 3000,})
                        toastElement.show()
                    })
                    .catch(function (error) {
                        // handle error
                        console.log(error);
                    })
            }
            function DelPropertyIncreating(event)
            {
                event.preventDefault();
                let url = this.href
                axios
                    .post(url)
                    .then(function(response) {
                        // rafraichissement du tableau
                        document.getElementById('listeIncreating').innerHTML = response.data.liste;
                        // Mise en place de l'évenement pour la suppression d'un bien en cours de création
                        document.querySelectorAll('a.jsModalDelPropertyIncreating').forEach(function(link){
                            link.addEventListener('click', DelPropertyIncreating)
                        })
                        // Mise en place de l'évenement pour l'archivage d'un bien
                        document.querySelectorAll('a.jsModalDelProperty').forEach(function(link){
                            link.addEventListener('click', ArchivageProperty)
                        })
                        document.querySelectorAll('a.Modaltransferate').forEach(function(link){
                            link.addEventListener('click', modalTransferate)
                        })

                        // initialisation du toaster
                        var toastHTMLElement = document.getElementById("toaster");
                        var message = response.data.message;
                        var toastBody = toastHTMLElement.querySelector('.toast-body') // selection de l'élément possédant le message
                        toastBody.textContent = message;
                        var toastElement = new bootstrap.Toast(toastHTMLElement, {animation: true,autohide: true,delay: 3000})
                        toastElement.show();
                    })
                    .catch(function (error) {
                        // handle error
                        console.log(error);
                    })

            }

            // Code d'ouverture de la modale de suppression d'une ligne en mode création d'un bien
            var Suppr = document.getElementById('SupprIncreatring')
            Suppr.addEventListener('show.bs.modal', function (event) {
                // Button that triggered the modal
                var a = event.relatedTarget
                // Extract info from data-bs-* attributes
                var recipient = a.getAttribute('data-bs-whatever')
                // If necessary, you could initiate an AJAX request here
                // and then do the updating in a callback.
                //
                // Update the modal's content.
                var modalTitle = Suppr.querySelector('.modal-title')
                var modalText = Suppr.querySelector('.modal-text')
                var modalBodyInput = Suppr.querySelector('.modal-body input')
                let modalFooterA = Suppr.querySelector('.modal-footer a')

                modalTitle.textContent = "Suppression d'un bien en cours de création"
                modalBodyInput.value = recipient
                modalText.innerHTML = "Vous êtes sur le point de supprimer le bien en cours de création.<br><b>Etes-vous sur de vouloir continuer ?</b>"
                modalFooterA.href = '/gestapp/property/increatingdel/' + recipient
            })

            // Code d'ouverture de la modale de suppression d'un bien archivé
            const ModalSupprCreating = document.getElementById('SupprCreating')
            function SupprCreating(event){
                console.log('Ok')
            }

            // PARTIE : Désarchivages d'un bien ou de plusieurs
            // -----------------------
            // ouverture de la modale
            const modalDisarchived = document.getElementById('modalDisarchived')
            modalDisarchived.addEventListener('show.bs.modal', function(event){
                // Récupération du bouton cliqué et extraction de la variable transmise dans le data-bs-whatever
                let button = event.relatedTarget
                let recipient = button.getAttribute('data-bs-whatever')
                // Attribution pour le cleint et la propriété des éléments insclus dans le data-bs-whatever
                let modalTitle = modalDisarchived.querySelector('.modal-title')
                let modalText = modalDisarchived.querySelector('.modal-text')
                let modalSubmit = modalDisarchived.querySelector('.modal-footer a')
                modalTitle.textContent = 'Désarchivage du bien séléctionné'
                modalText.outerHTML = '<p><b>Attention</b><br>En cliquant sur le bouton "Désarchiver", le bien sélectionné sera repositionné parmi les biens actifs.</p>'
                modalSubmit.href = 'disarchived/' + recipient
            })
            let submitModal = document.getElementById('submitModal')
            submitModal.addEventListener('click', function (event){
                event.preventDefault()
                let url = this.href
                axios
                    .post(url)
                    .then(function(response){
                        document.getElementById('list').innerHTML = response.data.liste;
                        document.getElementById('listArchived').innerHTML = response.data.listeArchived
                        // Events
                        // Mise en place de l'évenement pour la suppression d'un bien en cours de création
                        document.querySelectorAll('a.jsModalDelPropertyIncreating').forEach(function(link){
                            link.addEventListener('click', DelPropertyIncreating)
                        })
                        // Mise en place de l'évenement pour l'archivage d'un bien
                        document.querySelectorAll('a.jsModalDelProperty').forEach(function(link){
                            link.addEventListener('click', ArchivageProperty)
                        })
                        document.querySelectorAll('a.Modaltransferate').forEach(function(link){
                            link.addEventListener('click', modalTransferate)
                        })
                    })
                    .catch(function (error) {
                        // handle error
                        console.log(error);
                    })
            })

            // PARTIE : Archivages de plusieurs biens
            // -----------------------
            // sélectionner toutes les checkBox's à partir de la checkbox du ht de page
            let arrayCheckbox = []
            document.getElementById('CheckAllProperties').onclick = function() {
                let checkboxes = document.getElementsByName('CheckProperty');
                for (let checkbox of checkboxes) {
                    checkbox.checked = this.checked
                    if(checkbox.checked){
                        arrayCheckbox.push(parseInt(checkbox.value))
                        arrayCheckbox = [... new Set(arrayCheckbox)]
                    }
                    console.log(arrayCheckbox)
                }
            }
            // ou récupération des lignes sélectionnées
            document.getElementById('SupprRows').onclick = function(event){
                event.preventDefault()
                let checkboxes = document.getElementsByName('CheckProperty');
                for (let checkbox of checkboxes) {
                    if(checkbox.checked){
                        arrayCheckbox.push(parseInt(checkbox.value))
                    }
                }
                for(let array of arrayCheckbox)
                {
                    axios
                        .post('/gestapp/property/archived/' + array)
                        .then(function(response){
                            document.getElementById('listArchived').innerHTML = response.data.liste
                            // Mise en place de l'évenement pour la suppression d'un bien en cours de création
                            document.querySelectorAll('a.jsModalDelPropertyIncreating').forEach(function(link){
                                link.addEventListener('click', DelPropertyIncreating)
                            })
                            // Mise en place de l'évenement pour l'archivage d'un bien
                            document.querySelectorAll('a.jsModalDelProperty').forEach(function(link){
                                link.addEventListener('click', ArchivageProperty)
                            })
                            document.querySelectorAll('a.Modaltransferate').forEach(function(link){
                                link.addEventListener('click', modalTransferate)
                            })
                        })
                        .catch(function(error){
                            console.log(error)
                        })
                }
            }

            function removeOptions(selectElement) {
                var i, L = selectElement.options.length - 1;
                for(i = L; i >= 0; i--) {
                    selectElement.remove(i);
                }
            }

            function modalTransferate(event){
                event.preventDefault();
                console.log(event.delegateTarget)
                let a = event.delegateTarget.getAttribute('id')
                let modal = document.getElementById('modalTransferate')
                let SelectEmployed = document.getElementById('SelectEmployed')
                let form = document.getElementById('transferateForm')
                form.action = "/gestapp/property/transferate/" + a
                axios
                    .get('/opadmin/selectemployed/')
                    .then(function(response){
                        let categoriesValues = response.data.employeds
                        // suppression des options du select
                        removeOptions(SelectEmployed);
                        categoriesValues.forEach((element) => {
                            if (element.id === parseInt(categoriesValues)){
                                let newOption = new Option (element.firstName+" "+element.lastName, element.id, false, true);
                                SelectEmployed.options.add (newOption);
                            }else{
                                let newOption = new Option (element.firstName+" "+element.lastName, element.id);
                                SelectEmployed.options.add (newOption);
                            }
                        })
                    })
            }

            // PARTIE : suppression d'un bien ou de plusieurs
            // -----------------------
            // ouverture de la modale
            const modalSupprArchived = document.getElementById('modalSupprArchived')
            modalSupprArchived.addEventListener('show.bs.modal', function(event){
                // Récupération du bouton cliqué et extraction de la variable transmise dans le data-bs-whatever
                let a = event.relatedTarget
                let url = a.href
                console.log(url)
                // Attribution pour le client et la propriété des éléments insclus dans le data-bs-whatever
                let modalSubmit = modalSupprArchived.querySelector('.modal-footer a')
                modalSubmit.href = url
            })
            function supprArchivedProperty(event){
                event.preventDefault()
                let url = this.href
                axios
                    .post(url)
                    .then(function(response){
                        document.getElementById('list').innerHTML = response.data.liste
                        document.getElementById('listArchived').innerHTML = response.data.listeArchived
                        document.querySelector('a.supprArchivedProperty').addEventListener('click', supprArchivedProperty)
                        // Mise en place de l'évenement pour la suppression d'un bien en cours de création
                        document.querySelectorAll('a.jsModalDelPropertyIncreating').forEach(function(link){
                            link.addEventListener('click', DelPropertyIncreating)
                        })
                        // Mise en place de l'évenement pour l'archivage d'un bien
                        document.querySelectorAll('a.jsModalDelProperty').forEach(function(link){
                            link.addEventListener('click', ArchivageProperty)
                        })
                        document.querySelectorAll('a.Modaltransferate').forEach(function(link){
                            link.addEventListener('click', modalTransferate)
                        })
                    })
            }

            // Création des évènements JS
            document.querySelector('a.supprArchivedProperty').addEventListener('click', supprArchivedProperty)
            // Mise en place de l'évenement pour la suppression d'un bien en cours de création
            document.querySelectorAll('a.jsModalDelPropertyIncreating').forEach(function(link){
                link.addEventListener('click', DelPropertyIncreating)
            })
            // Mise en place de l'évenement pour l'archivage d'un bien
            document.querySelectorAll('a.jsModalDelProperty').forEach(function(link){
                link.addEventListener('click', ArchivageProperty)
            })
            document.querySelectorAll('a.Modaltransferate').forEach(function(link){
                link.addEventListener('click', modalTransferate)
            })

        }
    </script>
{% endblock %}

{% block breadcrumb %}
    <ol class="breadcrumb">
        <li class="breadcrumb-item active"><a href="{{ path('op_admin_dashboard_index') }}"><i class="fa-duotone fa-house-blank"></i> Tableau de Bord</a></li>
        <li class="breadcrumb-item active">Transaction</li>
        <li class="breadcrumb-item active"><a href="{{ path('op_gestapp_property_index') }}">Biens immobilier</a></li>
    </ol>
{% endblock %}

{% block content %}
<div id="listeIncreating" class="row mb-2">
    {{ render(controller('App\\Controller\\Gestapp\\PropertyController::inCreating')) }}
</div>
<div class="row mb-5">
    {% include ('gestapp/property/include/_navproperty.html.twig')%}
    <div class="col-12">
        {% if expireAtOut is defined and expireAtOut > 0 %}
            {% if expireAtOut == 1 %}
                <p class="alert alert-success">Prenez note que {{ expireAtOut }} bien dont le mandat a expiré, a été automatiquement archivé.</p>
            {% else %}
                <p class="alert alert-success">Prenez note que {{ expireAtOut }} biens dont le mandat a expiré, ont été automatiquement archivés.</p>
            {% endif %}
        {% endif %}
    </div>
    <div id="list" class="col-sm-12">
        {% include('gestapp/property/_list.html.twig') %}
    </div>
    <div id="listArchived" class="col-sm-12" style="display: none;">
    </div>
    <div id="listDiffusion" class="col-sm-12" style="display: none;">
    </div>
    <div id="listClosed" class="col-sm-12" style="display: none;">
    </div>
</div>

{% endblock %}

{% block modal %}
    {{ parent() }}
    {# Modal de suppression #}
    <div class="modal fade" id="SupprIncreatring" tabindex="-1" aria-labelledby="SupprIncreatring" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title text-warning" id="exampleModalLabel">New message</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p class="modal-text">Vous êtes sur le point de supprimer l'évènement.</p>
                    <input type="hidden" id="recipient-name">
                </div>
                <div class="modal-footer">
                    <a href="#" type="button" class="btn btn-warning jsModalDelPropertyIncreating" data-bs-dismiss="modal">Supprimer</a>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                </div>
            </div>
        </div>
    </div>
    {# Modal pour la suppression du bien sélectionné#}
    <div class="modal fade" id="SupprCreating" tabindex="-1" aria-labelledby="SupprCreating" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title text-warning" id="exampleModalLabel">Suppression complète du bien</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p class="modal-text"><b>Attention :</b> Vous êtes sur le point de supprimer le bien sélectionné.</p>
                    <input type="hidden" id="recipient-name">
                </div>
                <div class="modal-footer">
                    <a href="#" type="button" class="btn btn-warning jsModalDelProperty" data-bs-dismiss="modal">Supprimer</a>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                </div>
            </div>
        </div>
    </div>
    {# A définir à quoi il sert #}
    <div class="modal fade" id="modalSupprArchived" tabindex="-1" aria-labelledby="Publish" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title text-warning" id="exampleModalLabel">Suppression complète du bien</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p class="modal-text">Vous êtes sur le point de supprimer le bien sélectionné.</p>
                    <input type="hidden" id="recipient-name">
                </div>
                <div class="modal-footer">
                    <a href="#" type="button" class="btn btn-warning supprArchivedProperty" data-bs-dismiss="modal">Supprimer</a>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                </div>
            </div>
        </div>
    </div>
    {# Modal pour le désarchibage du bien sélectionné #}
    <div class="modal fade" id="modalDisarchived" tabindex="-1" aria-labelledby="Publish" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title text-warning" id="exampleModalLabel">New message</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p class="modal-text">Vous êtes sur le point de supprimer l'évènement.</p>
                    <input type="hidden" id="recipient-name">
                </div>
                <div class="modal-footer">
                    <a href="#" id="submitModal" type="button" class="btn btn-warning" data-bs-dismiss="modal">Désarchiver le bien</a>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                </div>
            </div>
        </div>
    </div>
    {# Modal de duplication vers un collaborateur #}
    <div class="modal fade" id="modalTransferate" tabindex="-1" aria-labelledby="modalTransferate" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title text-warning" id="exampleModalLabel">Transfert d'un bien vers un collaborateur</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form id="transferateForm" action="#" method="post">
                <div class="modal-body">
                    <p class="modal-text">Vous êtes sur le point de transférer le bien :</p>
                    <p>Veuillez choisir un collaborateur :</p>
                        <select id="SelectEmployed" class="form-select form-select-sm" aria-label="Default select example" name="SelectEmployed">
                        </select>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-sm btn-warning" data-bs-dismiss="modal">Transférer</button>
                    <button class="btn btn-sm btn-secondary" data-bs-dismiss="modal">J'annule</button>
                </div>
                </form>
            </div>
        </div>
    </div>
    {# Modal pour la date de fin de mandat #}
    <div class="modal fade" id="modalDateEndMandat" tabindex="-1" aria-labelledby="modalDateEndMandat" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title text-warning" id="exampleModalLabel">Déclaration de fin de mandat</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div id="modalBodyDateEndMandat" class="modal-body">
                </div>
                <div class="modal-footer">
                    <button id="submitDateEndMandat" type="submit" class="btn btn-warning" data-bs-dismiss="modal">Valider</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                </div>
            </div>
        </div>
    </div>
    {# Modal d'ajout d'une nouvelle proprieté #}
    <div class="modal fade" id="modalAddNewProperty" tabindex="-1" aria-labelledby="Suppr" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title text-info" id="exampleModalLabel">Edition d'un nouveau bien</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <table class="table table-sm">
                        <tr class="align-middle">
                            <td class=""><b>Attention :</b> Dans le cas où vous souhaiteriez créer un bien sans numéro de mandat, <br>veuillez cliquez dans la case suivante.</td>
                            <td><input id="nomandat" type="checkbox" name="nomandat" class="form-check-input"></td>
                        </tr>
                    </table>
                    <table id="tabMandat" class="table table-sm">
                        <tr class="align-middle">
                            <td id="tdconsign" class="col-sm-8 table-light">
                                Veuillez inscrire un numéro de mandat pour la création d'un bien.
                            </td>
                            <td class="col-sm-4"><input type="text" id="refMandat" name="refMandat" class="form-control form-control-sm"></td>
                        </tr>
                        <tr class="align-middle">
                            <td class="col-sm-8 table-light">
                                Ce bien est pour un usage de :
                            </td>
                            <td class="col-sm-4">
                                <select name="SelectDestination" id="SelectDestination" class="form-select form-select-sm">
                                    <option value="81">Vente pour particulier</option>
                                    <option value="51">Location pour particulier</option>
                                    <option value="49">Vente pour professionnel</option>
                                    <option value="48">Location pour professionnel</option>
                                </select>
                            </td>
                        </tr>
                    </table>
                    <input type="hidden" id="lastMandat">
                </div>
                <div class="modal-footer">
                    {% set refmandat = 0 %}
                    {% set isnomandat = 0 %}
                    <a id="submitAddnewproperty" href="{{ path('op_gestapp_property_add', {'isNomandat':isnomandat,'refMandat': refmandat, 'destination':4}) }}" class="btn btn-info">Accéder à la fiche</a>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                </div>
            </div>
        </div>
    </div>

    {# Modal de décloture dossier #}
    <div class="modal fade" id="modalDisClosed" tabindex="-1" aria-labelledby="modalDisClosed" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content border-dark">
                <div class="modal-header text-bg-secondary">
                    <h5 class="modal-title" id="exampleModalLabel">Décloture du dossier</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p class="modal-text">Attention, Vous êtes sur le point décloturer le dossier.</p>
                    <p class="modal-text">Il va de nouveau être accessible pour toutes les modifications ou les corrections dans les espaces de gestion : "Biens" ou "Ventes".</p>
                </div>
                <div class="modal-footer text-bg-secondary">
                    <a href="#" type="button" class="btn btn-sm btn-outline-dark jsModalDelProperty" data-bs-dismiss="modal">Je réouvre le dossier.</a>
                    <button class="btn btn-sm btn-secondary" data-bs-dismiss="modal">J'annule</button>
                </div>
            </div>
        </div>
    </div>

    {# annonce toaster #}
    <div aria-live="polite" aria-atomic="true" class="position-relative">
        <div class="toast-container position-absolute top-50 end-0 p-3">
            <div id="toaster" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="toast-header">
                    <strong class="me-auto">Bootstrap</strong>
                    <small>à l'instant</small>
                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
                <div class="toast-body">
                    Hello, world! This is a toast message.
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block footer %}
    {{ parent() }}
{% endblock %}