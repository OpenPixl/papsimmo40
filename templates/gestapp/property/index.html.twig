{% extends 'admin.html.twig' %}

{% block title %}Property index{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        window.onload = function(){

        // ----------------------------------------------------------------
        // STEP 0 : A l'initialisation de la page
        // ----------------------------------------------------------------

            // ajout des tableaux complémentaires
            axios
                .get('/gestapp/property/propertyDiffusion')
                .then(function(response){
                    document.getElementById('listDiffusion').innerHTML = response.data.listdiffusion
                })
            axios
                .get('/gestapp/property/listarchived')
                .then(function(response){
                    document.getElementById("listArchived").innerHTML = response.data.listarchived
                })
            const list = document.getElementById('list')
            const listDiffusion = document.getElementById("listDiffusion")
            const listArchived = document.getElementById("listArchived")
            // Afficher le tableau des diffusions pour chaque bien
            document.getElementById('btnListDiffusion').onclick = function(event){
                listDiffusion.className = listDiffusion.className !== 'show' ? 'show' : 'hide';
                if(listDiffusion.className === 'show') {
                    listDiffusion.style.display = 'block'
                    list.style.display = 'none'
                    listArchived.style.display = 'none'
                    document.getElementById('btnListDiffusion').textContent = 'Retour sur la liste des biens'
                }
                if(listDiffusion.className === 'hide') {
                    listDiffusion.style.display = 'none'
                    list.style.display = 'block'
                    listArchived.style.display = 'none'
                    document.getElementById('btnListDiffusion').textContent = 'Afficher la diffusions des biens'
                }
            }
            // Afficher le tableau des biens archivés
            document.getElementById('btnMListArchived').onclick = function(event){

                listArchived.className = listArchived.className !== 'show' ? 'show' : 'hide';
                if(listArchived.className === 'show') {
                    listArchived.style.display = 'block'
                    list.style.display = 'none'
                    listDiffusion.style.display = 'none'
                    document.getElementById('btnMListArchived').textContent = 'Retour sur la liste des biens'
                }
                if(listArchived.className === 'hide') {
                    listArchived.style.display = 'none';
                    list.style.display = 'block';
                    listDiffusion.style.display = 'none'
                    document.getElementById('btnMListArchived').textContent = 'Afficher les biens archivés'
                }

            }

        // ----------------------------------------------------------------
        // STEP 1 : Après l'initialisation de la page
        // ----------------------------------------------------------------

            // Ouverture de la modale d'ajout d'un bien / propriété avec intégration du Numéro de mandat modifiable par le créateur
            // ----------------------------------------------------------------
            // I. Ouverture de la modal
            const modalAddNewProperty = document.getElementById('modalAddNewProperty')
            const NewProperty = new bootstrap.Modal(modalAddNewProperty, { keyboard: true })
            const addNewProperty = document.getElementById('addNewProperty')
            const submitAddnewproperty = document.getElementById('submitAddnewproperty')
            const ArrayMandats = []

            axios
                .get('/gestapp/property/getlistmandats')
                .then(function(response){
                    // alimenter le tableau des ref existantes
                    let ListMandats = response.data.listmandats
                    ListMandats.forEach((element) => {
                        ArrayMandats.push(parseInt(element))
                    })
                })
            addNewProperty.addEventListener('click', function(event){
                event.preventDefault()
                NewProperty.show()
            })
            // condition si le bien doit etre créer sans numéro de mandat
            document.getElementById('nomandat').addEventListener('change', function(event){
                if(this.checked){
                    document.getElementById('tabMandat').setAttribute("class", "d-none")
                    document.getElementById("submitAddnewproperty").href = '/gestapp/property/add/0/0'
                }else {
                    document.getElementById('tabMandat').classList.remove("d-none");
                    document.getElementById('tabMandat').setAttribute("class", "table")
                }
            })
            // III. Modification de l'addresse de traitement sur l'input
            document.getElementById('refMandat').addEventListener('input', function(event){
                let newmandat = parseInt(document.getElementById('refMandat').value)
                let flag = 0
                for(let i=0; i<ArrayMandats.length; i++) {
                    if(newmandat === ArrayMandats[i]) {
                        flag = 1;
                    }
                }
                if(flag === 1){
                    document.getElementById("refMandat").classList.remove("is-valid")
                    document.getElementById("refMandat").classList.add("is-invalid")
                    document.getElementById('tdconsign').innerHTML = 'Veuillez corriger ce numéro de mandat, <br>il est présent dans la liste des biens <b>Paps immo</b>'

                }else{
                    document.getElementById("refMandat").classList.remove("is-invalid")
                    document.getElementById("refMandat").classList.add("is-valid")
                    document.getElementById('tdconsign').textContent = "Numéro de mandat valide."
                }
            })

            document.getElementById("submitAddnewproperty").addEventListener('click', function(event){
                if(document.getElementById("refMandat").value === "" ){
                    if(document.getElementById("nomandat").checked !== true){
                        event.preventDefault()
                        alert("Attention, si vous souhaitez créer un bien sans numéro de mandat, veuillez cochez la case. Sinon entrez un numéro de mandat valid.")
                    }else{
                        event.preventDefault()
                        submitAddnewproperty.href = '/gestapp/property/add/1/0'
                        window.location.href = submitAddnewproperty.href
                    }
                }else{
                    if(document.getElementById("refMandat").classList.contains('is-valid')){
                        event.preventDefault()
                        let nummandat = document.getElementById("refMandat").value
                        submitAddnewproperty.href = '/gestapp/property/add/0/' + nummandat
                        window.location.href = submitAddnewproperty.href
                    }else{
                        event.preventDefault()
                        alert("Attention, le numéro de mandat n'est pas valide. Veuillez entrez un numéro de mandat valid")
                    }
                }
            })

            // Archivages d'un bien en création
            // ----------------------------------------------------------------
            // I.
            function DelPropertyIncreating(event)
            {
                event.preventDefault();
                let url = this.href
                axios
                    .post(url)
                    .then(function(response) {
                        // rafraichissement du tableau
                        document.getElementById('listeIncreating').innerHTML = response.data.liste;
                        // Mise en place de l'évenement pour la suppression d'un bien en cours de création
                        document.querySelectorAll('a.jsModalDelPropertyIncreating').forEach(function(link){
                            link.addEventListener('click', DelPropertyIncreating)
                        })
                        // Mise en place de l'évenement pour la suppression d'un bien
                        document.querySelectorAll('a.jsModalDelProperty').forEach(function(link){
                            link.addEventListener('click', DelProperty)
                        })

                        // initialisation du toaster
                        var toastHTMLElement = document.getElementById("toaster");
                        var message = response.data.message;
                        var toastBody = toastHTMLElement.querySelector('.toast-body') // selection de l'élément possédant le message
                        toastBody.textContent = message;
                        var toastElement = new bootstrap.Toast(toastHTMLElement, {animation: true,autohide: true,delay: 3000})
                        toastElement.show();
                    })

            }


            function DelProperty(event)
            {
                event.preventDefault();
                const url = this.href;
                axios
                    .post(url)
                    .then(function(response) {
                        // rafraichissement du tableau
                        const liste = document.getElementById('list').innerHTML = response.data.liste;

                        // Mise en place de l'évenement pour la suppression d'un bien en cours de création
                        document.querySelectorAll('a.jsModalDelPropertyIncreating').forEach(function(link){
                            link.addEventListener('click', DelPropertyIncreating)
                        })

                        // Mise en place de l'évenement pour la suppression d'un bien
                        document.querySelectorAll('a.jsModalDelProperty').forEach(function(link){
                            link.addEventListener('click', DelProperty)
                        })

                        // initialisation du toaster
                        var toastHTMLElement = document.getElementById("toaster")
                        var message = response.data.message
                        var toastBody = toastHTMLElement.querySelector('.toast-body') // selection de l'élément possédant le message
                        toastBody.innerHTML = message
                        var toastElement = new bootstrap.Toast(toastHTMLElement, {animation: true, autohide: true, delay: 3000,})
                        toastElement.show()
                    })
            }

            // Code d'ouverture de la modale de suppression d'une ligne en mode création d'un bien
            var Suppr = document.getElementById('SupprIncreatring')
            Suppr.addEventListener('show.bs.modal', function (event) {
                // Button that triggered the modal
                var a = event.relatedTarget
                // Extract info from data-bs-* attributes
                var recipient = a.getAttribute('data-bs-whatever')
                // If necessary, you could initiate an AJAX request here
                // and then do the updating in a callback.
                //
                // Update the modal's content.
                var modalTitle = Suppr.querySelector('.modal-title')
                var modalText = Suppr.querySelector('.modal-text')
                var modalBodyInput = Suppr.querySelector('.modal-body input')
                let modalFooterA = Suppr.querySelector('.modal-footer a')

                modalTitle.textContent = "Suppression d'un bien en cours de création"
                modalBodyInput.value = recipient
                modalText.innerHTML = "Vous êtes sur le point de supprimer le bien en cours de création.<br><b>Etes-vous sur de vouloir continuer ?</b>"
                modalFooterA.href = '/gestapp/property/increatingdel/' + recipient
            })

            // Mise en place de l'évenement pour la suppression d'un bien en cours de création
            document.querySelectorAll('a.jsModalDelPropertyIncreating').forEach(function(link){
                link.addEventListener('click', DelPropertyIncreating)
            })

            // Mise en place de l'évenement pour la suppression d'un bien
            document.querySelectorAll('a.jsModalDelProperty').forEach(function(link){
                link.addEventListener('click', DelProperty)
            })

            // PARTIE : Archivages de plusieurs biens
            // -----------------------
            // sélectionner toutes les checkBoxs à partir de la checkbox du ht de page
            let arrayCheckbox = []
            document.getElementById('CheckAllProperties').onclick = function() {
                let checkboxes = document.getElementsByName('CheckProperty');
                for (let checkbox of checkboxes) {
                    checkbox.checked = this.checked
                    if(checkbox.checked){
                        arrayCheckbox.push(parseInt(checkbox.value))
                        arrayCheckbox = [... new Set(arrayCheckbox)]
                    }
                    console.log(arrayCheckbox)
                }
            }
            // ou récupération des lignes sélectionnées
            document.getElementById('SupprRows').onclick = function(event){
                event.preventDefault()
                let checkboxes = document.getElementsByName('CheckProperty');
                for (let checkbox of checkboxes) {
                    if(checkbox.checked){
                        arrayCheckbox.push(parseInt(checkbox.value))
                        arrayCheckbox = [... new Set(arrayCheckbox)]
                    }
                    console.log(arrayCheckbox)
                }
            }

        }
    </script>
{% endblock %}

{% block breadcrumb %}
    <ol class="breadcrumb">
        <li class="breadcrumb-item active"><a href="{{ path('op_admin_dashboard_index') }}"><i class="fa-duotone fa-house-blank"></i> Tableau de Bord</a></li>
        <li class="breadcrumb-item active">Transaction</li>
        <li class="breadcrumb-item active"><a href="{{ path('op_gestapp_property_index') }}">Biens immobilier</a></li>
    </ol>
{% endblock %}

{% block contentTitle %}
    <div class="row d-flex justify-content-between" >
        <div class="col-sm-12">
            <h1>TRANSACTIONS - Liste des biens</h1>
        </div>
    </div>
{% endblock %}

{% block content %}
<div id="listeIncreating"class="row mb-2">
    {{ render(controller('App\\Controller\\Gestapp\\PropertyController::inCreating')) }}
</div>
<div class="row">
    {% include ('gestapp/property/include/_navproperty.html.twig')%}
    <div id="list" class="col-sm-12">
        {% include('gestapp/property/_list.html.twig') %}
    </div>
    <div id="listArchived" class="col-sm-12" style="display: none;">
    </div>
    <div id="listDiffusion" class="col-sm-12" style="display: none;">
    </div>
</div>

{% endblock %}

{% block modal %}
    {{ parent() }}
    {# Modal de suppression #}
    <div class="modal fade" id="SupprIncreatring" tabindex="-1" aria-labelledby="SupprIncreatring" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title text-warning" id="exampleModalLabel">New message</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p class="modal-text">Vous êtes sur le point de supprimer l'évènement.</p>
                    <input type="hidden" id="recipient-name">
                </div>
                <div class="modal-footer">
                    <a href="#" type="button" class="btn btn-warning jsModalDelPropertyIncreating" data-bs-dismiss="modal">Supprimer</a>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="SupprCreating" tabindex="-1" aria-labelledby="SupprCreating" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title text-warning" id="exampleModalLabel">New message</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p class="modal-text">Vous êtes sur le point de supprimer l'évènement.</p>
                    <input type="hidden" id="recipient-name">
                </div>
                <div class="modal-footer">
                    <a href="#" type="button" class="btn btn-warning jsModalDelProperty" data-bs-dismiss="modal">Supprimer</a>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="Publish" tabindex="-1" aria-labelledby="Publish" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title text-warning" id="exampleModalLabel">New message</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p class="modal-text">Vous êtes sur le point de supprimer l'évènement.</p>
                    <input type="hidden" id="recipient-name">
                </div>
                <div class="modal-footer">
                    <a href="#" type="button" class="btn btn-warning jsModalDelProperty" data-bs-dismiss="modal">Supprimer</a>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                </div>
            </div>
        </div>
    </div>
    {# Modal d'ajout d'une nouvelle proprieté #}
    <div class="modal fade" id="modalAddNewProperty" tabindex="-1" aria-labelledby="Suppr" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title text-info" id="exampleModalLabel">Edition d'un nouveau bien</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <table class="table table-sm">
                        <tr class="align-middle">
                            <td class=""><b>Attention :</b> Dans le cas ou vous souhaiteriez créer un bien sans numéro de mandat, <br>veuillez cliquez dans la case suivante.</td>
                            <td><input id="nomandat" type="checkbox" name="nomandat" class="form-check-input"></td>
                        </tr>
                    </table>
                    <table id="tabMandat" class="table table-sm">
                        <tr class="align-middle">
                            <td id="tdconsign" class="col-sm-8 table-light">
                                Veuillez inscrire un numéro de mandat pour la création d'un bien.
                            </td>
                            <td class="col-sm-4"><input type="text" id="refMandat" name="refMandat" class="form-control form-control-sm"></td>
                        </tr>
                    </table>
                    <input type="hidden" id="lastMandat">
                </div>
                <div class="modal-footer">
                    {% set refmandat = 0 %}
                    {% set isnomandat = 0 %}
                    <a id="submitAddnewproperty" href="{{ path('op_gestapp_property_add', {'isNomandat':isnomandat,'refMandat': refmandat}) }}" class="btn btn-info">Accéder à la fiche</a>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                </div>
            </div>
        </div>
    </div>

    {# annonce toaster #}
    <div aria-live="polite" aria-atomic="true" class="position-relative">
        <div class="toast-container position-absolute top-50 end-0 p-3">
            <div id="toaster" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="toast-header">
                    <strong class="me-auto">Bootstrap</strong>
                    <small>à l'instant</small>
                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
                <div class="toast-body">
                    Hello, world! This is a toast message.
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block footer %}
    {{ parent() }}
{% endblock %}