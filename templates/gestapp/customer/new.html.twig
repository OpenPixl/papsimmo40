{% extends 'admin.html.twig' %}

{% block title %}Papsimmo | Ajout d'un client{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        window.onload = function(){
            // mise en place du datapicker flatpickr sur les champs de date
            flatpickr(".flatpickr", {
                "locale": "fr",
                enableTime: false,
                allowInput: true,
                altFormat: "j F Y",
                dateFormat: "d/m/Y",
            });

            let valcivility = document.querySelector('input[name=customer\\[civility\\]]:checked').value;
            if (valcivility > 1){
                document.getElementById('customer_maidenName').classList.remove('d-none');
            }

            const radioButtons = document.querySelectorAll('input[name=customer\\[civility\\]]');
            console.log(radioButtons)
            radioButtons.forEach(function(radio) {
                radio.addEventListener("change", function() {
                    if (parseInt(this.value) === 2) {
                        document.getElementById('customer_maidenName').classList.remove('d-none');
                    } else if (parseInt(this.value) === 1){
                        document.getElementById('customer_maidenName').classList.add('d-none');
                    }
                });
            });

            function removeOptions(selectElement) {
                var i, L = selectElement.options.length - 1;
                for(i = L; i >= 0; i--) {
                    selectElement.remove(i);
                }
            }

            // Evènement sur le bouton btnAddCustomer
            const btnAddCustomer = document.getElementById('btnAddCustomer')
            btnAddCustomer.onclick = function (event) {
                event.preventDefault()
                let urlEditCustomer = this.href
                let FormEditCustomer = document.getElementById('FormEditCustomer')
                let dataEditCustomer = new FormData(FormEditCustomer)
                // envoie des données
                axios
                    .post(urlEditCustomer, dataEditCustomer)
                    .then(function (response) {
                        // préparation du toaster
                        var option = {
                            animation : true,
                            autohide: true,
                            delay : 3000,
                        };
                        // initialisation du toaster
                        var toastHTMLElement = document.getElementById("toaster");
                        var message = response.data.message;
                        var toastBody = toastHTMLElement.querySelector('.toast-body') // selection de l'élément possédant le message
                        toastBody.textContent = "La fiche a été correctement créée.";
                        var toastElement = new bootstrap.Toast(toastHTMLElement, option);
                        toastElement.show();
                        // ajout class disable sur le bouton
                        btnAddCustomer.className += " disabled"
                    })
                    .catch(function (error) {
                        // handle error
                        console.log(error);
                    })
            }


            // PARTIE Code postal et Ville - API
            // ---------------------------------------
            const commune = document.getElementById('customer_city')
            const zipcode = document.getElementById('customer_zipcode')
            const SelectCity = document.getElementById('selectcity')
            const addresseInput = document.getElementById('property_step1_adress')
            zipcode.addEventListener('input', function(event){
                if(zipcode.value.length === 5)
                {
                    let coord = this.value
                    axios
                        .get('https://apicarto.ign.fr/api/codes-postaux/communes/'+ coord)
                        .then(function(response){
                            let features = response.data
                            removeOptions(SelectCity);
                            features.forEach((element) => {
                                let name = element['codePostal']+" - "+element['nomCommune']
                                let OptSelectCity = new Option (name.toUpperCase(), name.toUpperCase(), false, true);
                                SelectCity.options.add(OptSelectCity);
                            })
                            if (SelectCity.options.length === 1){
                                let value = SelectCity.value.split(' ')
                                zipcode.value = value[0]
                                commune.value = value[2].toUpperCase()
                            }else{
                                let value = SelectCity.value.split(' ')
                                zipcode.value = value[0]
                                commune.value = value[2].toUpperCase()
                            }
                        })
                }
            })
            SelectCity.addEventListener('change', function (event){
                let value = this.value.split(' ')
                console.log(value)
                zipcode.value = value[0]
                commune.value = value[2].toUpperCase()
            })
        }
    </script>
{% endblock %}

{% block contentTitle %}
    <div class="row">
        <div class="col-sm-12">
            <h1>Ajouter un nouveau client sur la plateforme</h1>
        </div>
    </div>
{% endblock %}

{% block content %}
    <div class="row">
        <div class="col-12">
            <div class="row">
                <div class="col-sm-12">
                    <div class="card">
                        <div class="card-body">
                            {{ include('gestapp/customer/_form.html.twig') }}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block footer %}
    {{ parent() }}
    <section>
        {# annonce toaster #}
        <div aria-live="polite" aria-atomic="true" class="position-relative">
            <div class="toast-container position-absolute top-50 end-0 p-3">
                <div id="toaster" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
                    <div class="toast-header">
                        <strong class="me-auto">PAPS immo</strong>
                        <small>A l'instant</small>
                        <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                    <div class="toast-body">
                        Hello, world! This is a toast message.
                    </div>
                </div>
            </div>
        </div>
    </section>
{% endblock %}
